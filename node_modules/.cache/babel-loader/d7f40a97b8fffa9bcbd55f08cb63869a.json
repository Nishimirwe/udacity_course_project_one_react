{"ast":null,"code":"var _jsxFileName = \"D:\\\\LESSONS\\\\CODING\\\\REACT CODES\\\\COURSE PROJECTS\\\\BOOKS\\\\reactnd-project-myreads-starter\\\\src\\\\components\\\\searching.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nvar Search = function Search(_ref) {\n  var changePages = _ref.changePages,\n      search = _ref.search,\n      dataSe = _ref.dataSe,\n      Reads = _ref.Reads,\n      WnatToRead = _ref.WnatToRead,\n      CurrentlyReading = _ref.CurrentlyReading;\n  return React.createElement(\"div\", {\n    className: \"search-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"close-search\",\n    onClick: changePages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Close\")), React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return search(e);\n    },\n    placeholder: \"Search by title or author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"search-books-results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    className: \"books-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, dataSe.lenght !== 0 ? CurrentlyReading.filter(function (f) {\n    return f.author.includes(\"Lee\").map(function (crData, crindex) {\n      return React.createElement(\"li\", {\n        key: crindex,\n        className: \"book-li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-cover\",\n        style: crData.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"wr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"r\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"None\")))), React.createElement(\"div\", {\n        className: \"book-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, crData.title), React.createElement(\"div\", {\n        className: \"book-authors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, crData.author)));\n    });\n  }) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Type in box to search\"))));\n};\n\nexport default Search;","map":{"version":3,"sources":["D:\\LESSONS\\CODING\\REACT CODES\\COURSE PROJECTS\\BOOKS\\reactnd-project-myreads-starter\\src\\components\\searching.jsx"],"names":["React","Link","Search","changePages","search","dataSe","Reads","WnatToRead","CurrentlyReading","e","lenght","filter","f","author","includes","map","crData","crindex","url","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,IAAMC,MAAM,GAAE,SAARA,MAAQ,OACd;AAAA,MADgBC,WAChB,QADgBA,WAChB;AAAA,MAD6BC,MAC7B,QAD6BA,MAC7B;AAAA,MADqCC,MACrC,QADqCA,MACrC;AAAA,MAD6CC,KAC7C,QAD6CA,KAC7C;AAAA,MADoDC,UACpD,QADoDA,UACpD;AAAA,MADgEC,gBAChE,QADgEA,gBAChE;AACI,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEL,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAE,kBAACM,CAAD;AAAA,aAAKL,MAAM,CAACK,CAAD,CAAX;AAAA,KAA7B;AAA6C,IAAA,WAAW,EAAC,2BAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAJF,CADA,EAmBA;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGJ,MAAM,CAACK,MAAP,KAAiB,CAAjB,GACCF,gBAAgB,CAACG,MAAjB,CAAwB,UAACC,CAAD;AAAA,WAAKA,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkB,KAAlB,EAAyBC,GAAzB,CAA6B,UAACC,MAAD,EAAQC,OAAR;AAAA,aAC5D;AAAI,QAAA,GAAG,EAAEA,OAAT;AAAkB,QAAA,SAAS,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAED,MAAM,CAACE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,CAHF,CADF,EAcE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BF,MAAM,CAACG,KAApC,CAdF,EAeE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BH,MAAM,CAACH,MAAtC,CAfF,CADA,CAD4D;AAAA,KAA7B,CAAL;AAAA,GAAxB,CADD,GAwBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA1BA,CADF,CAnBA,CADJ;AAsDH,CAxDD;;AA0DA,eAAeX,MAAf","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Search =({changePages, search, dataSe, Reads, WnatToRead, CurrentlyReading})=>\r\n{\r\n    return (\r\n        <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n            <button className=\"close-search\" onClick={changePages}>Close</button>\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {\r\n            /*\r\n              NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n              You can find these search terms here:\r\n              https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n              However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n              you don't find a specific author or title. Every search is limited by search terms.\r\n            */}\r\n            <input type=\"text\" onChange={(e)=>search(e)} placeholder=\"Search by title or author\"/>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {}\r\n            {dataSe.lenght !==0 ?\r\n              CurrentlyReading.filter((f)=>f.author.includes(\"Lee\").map((crData,crindex)=>(\r\n            <li key={crindex} className=\"book-li\">\r\n            <div className=\"book\">\r\n              <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={crData.url}></div>\r\n                \r\n                <div className=\"book-shelf-changer\">\r\n                  <select>\r\n                    <option value=\"move\">Move to...</option>\r\n                    <option value=\"wr\">Want to Read</option>\r\n                    <option value=\"r\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                  </select>\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"book-title\">{crData.title}</div>\r\n              <div className=\"book-authors\">{crData.author}</div>\r\n            </div>\r\n          </li>\r\n              )))\r\n          :\r\n\r\n          <p>Type in box to search</p>\r\n          }\r\n          \r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}