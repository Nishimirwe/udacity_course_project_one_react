{"ast":null,"code":"import _classCallCheck from \"D:\\\\LESSONS\\\\CODING\\\\REACT CODES\\\\COURSE PROJECTS\\\\BOOKS\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\LESSONS\\\\CODING\\\\REACT CODES\\\\COURSE PROJECTS\\\\BOOKS\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\LESSONS\\\\CODING\\\\REACT CODES\\\\COURSE PROJECTS\\\\BOOKS\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\LESSONS\\\\CODING\\\\REACT CODES\\\\COURSE PROJECTS\\\\BOOKS\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\LESSONS\\\\CODING\\\\REACT CODES\\\\COURSE PROJECTS\\\\BOOKS\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\LESSONS\\\\CODING\\\\REACT CODES\\\\COURSE PROJECTS\\\\BOOKS\\\\reactnd-project-myreads-starter\\\\src\\\\App.js\";\nimport React from 'react'; // import * as BooksAPI from './BooksAPI'\n\nimport './App.css'; //import Router packages\n\nimport { BrowserRouter, Route } from 'react-router-dom'; // Let me import my External Components\n\nimport Checks from './components/checking';\nimport Search from './components/searching';\nimport CReading from './components/CurrentlyReading';\nimport WTRead from './components/WantToRead';\nimport Read from './components/read';\nimport BottomButton from './components/navigator';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\r\n       * TODO: Instead of using this state variable to keep track of which page\r\n       * we're on, use the URL in the browser's address bar. This will ensure that\r\n       * users can use the browser's back and forward buttons to navigate between\r\n       * pages, as well as provide a good URL they can bookmark and share.\r\n       */\n      searched: [],\n      Reads: [{\n        title: \"The Hobbit\",\n        author: \"J.R.R. Tolkien\"\n      }, {\n        title: \"Oh, the Places You'll Go!\",\n        author: \"Seuss\"\n      }, {\n        title: \"The Adventures of Tom Sawyer\",\n        author: \"Mark Twain\"\n      }],\n      CurrentlyReading: [{\n        title: \"To Kill a Mockingbird\",\n        author: \"Harper Lee\"\n      }, {\n        title: \"Ender's Game\",\n        author: \"Orson Scott Card\"\n      }],\n      WantToRead: [{\n        title: \"1776\",\n        author: \"David McCullough\"\n      }, {\n        title: \"Harry Potter and the Sorcerer's Stone\",\n        author: \"J.K. Rowling\"\n      }],\n      check: \"\",\n      pages: \"/\"\n    };\n\n    _this.shiftCategories = function (data, from, to) {\n      if (to == 'cr') {\n        var t = _this.state.CurrentlyReading;\n        data = t.push(data);\n\n        _this.setState({\n          CurrentlyReading: data\n        });\n      } else if (to == 'r') {\n        var _t = _this.state.Reads;\n        data = _t.push(data);\n\n        _this.setState({\n          Reads: data\n        });\n      } else if (to == 'wr') {\n        var _t2 = _this.state.WantToRead;\n        data = _t2.push(data);\n\n        _this.setState({\n          WantToRead: data\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Search, {\n        changePages: function changePages() {\n          return _this2.setState({\n            pages: \"/\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(CReading, {\n        ReadsData: this.state.CurrentlyReading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(WTRead, {\n        ReadsData: this.state.WantToRead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Read, {\n        ReadsData: this.state.Reads,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(BottomButton, {\n        changePages: function changePages() {\n          var data = {\n            title: \"Addinig new\",\n            author: \"Myself\"\n          };\n          _this2.setState({\n            pages: \"/search\"\n          }), _this2.shiftCategories(data, \"s\", \"cr\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["D:\\LESSONS\\CODING\\REACT CODES\\COURSE PROJECTS\\BOOKS\\reactnd-project-myreads-starter\\src\\App.js"],"names":["React","BrowserRouter","Route","Checks","Search","CReading","WTRead","Read","BottomButton","BooksApp","state","searched","Reads","title","author","CurrentlyReading","WantToRead","check","pages","shiftCategories","data","from","to","t","push","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\n// import * as BooksAPI from './BooksAPI'\r\nimport './App.css';\r\n//import Router packages\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n// Let me import my External Components\r\nimport Checks from './components/checking';\r\nimport Search from './components/searching';\r\nimport CReading from './components/CurrentlyReading';\r\nimport WTRead from './components/WantToRead';\r\nimport Read from './components/read';\r\nimport BottomButton from './components/navigator';\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    searched: [],\r\n    Reads: [{title:\"The Hobbit\",\r\n            author:\"J.R.R. Tolkien\"},\r\n            {title:\"Oh, the Places You'll Go!\",\r\n            author:\"Seuss\"},\r\n            {title:\"The Adventures of Tom Sawyer\",\r\n            author:\"Mark Twain\"}],\r\n    \r\n    CurrentlyReading : [{title: \"To Kill a Mockingbird\",\r\n            author: \"Harper Lee\"},\r\n            {title: \"Ender's Game\",\r\n            author: \"Orson Scott Card\"}],\r\n\r\n    WantToRead : [{title: \"1776\",\r\n                  author: \"David McCullough\"},\r\n                  {title: \"Harry Potter and the Sorcerer's Stone\",\r\n                  author: \"J.K. Rowling\"}],\r\n\r\n    check: \"\",\r\n    pages: \"/\"\r\n  }\r\n\r\n  shiftCategories=(data,from,to)=>\r\n  {\r\n    if(to=='cr')\r\n    {\r\n      let t=this.state.CurrentlyReading\r\n      data=t.push(data)\r\n      \r\n      this.setState({CurrentlyReading: data})\r\n    }\r\n    else if(to=='r')\r\n    {\r\n      let t=this.state.Reads\r\n      data=t.push(data)\r\n      this.setState({Reads: data})\r\n    }\r\n    else if(to=='wr')\r\n    {\r\n      let t=this.state.WantToRead\r\n      data=t.push(data)\r\n      this.setState({WantToRead: data})\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Route path=\"/search\">\r\n           <Search changePages={()=>this.setState({pages:\"/\"})} />\r\n        </Route>\r\n        <Route  exact path=\"/\">\r\n           <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n              <div>\r\n\r\n                <CReading ReadsData={this.state.CurrentlyReading} />\r\n\r\n                <WTRead ReadsData={this.state.WantToRead} />\r\n\r\n                <Read ReadsData={this.state.Reads}/>\r\n\r\n              </div>\r\n            </div>\r\n            <BottomButton changePages={()=>{\r\n            const data={title: \"Addinig new\",author: \"Myself\"}\r\n            this.setState({pages: \"/search\"}),\r\n            this.shiftCategories(data,\"s\",\"cr\")\r\n            }\r\n            }/>\r\n          </div>\r\n        </Route>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n"]},"metadata":{},"sourceType":"module"}